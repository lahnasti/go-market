basePath: /
definitions:
  models.Credentials:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  models.Product:
    properties:
      delete:
        type: boolean
      description:
        type: string
      name:
        type: string
      price:
        minimum: 1
        type: number
      quantity:
        minimum: 1
        type: integer
      uid:
        type: integer
    required:
    - description
    - name
    - price
    - quantity
    type: object
  models.Purchase:
    properties:
      productID:
        type: integer
      purchase_date:
        type: string
      quantity:
        type: integer
      uid:
        type: integer
      userID:
        type: integer
    required:
    - productID
    - quantity
    - userID
    type: object
  models.User:
    properties:
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      username:
        type: string
    required:
    - email
    - password
    - username
    type: object
  responses.Error:
    properties:
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
  responses.Success:
    properties:
      data: {}
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for market.
  title: Go-market
  version: "1.0"
paths:
  /products:
    get:
      description: Возвращает список всех продуктов
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Success'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Получить список всех продуктов
      tags:
      - Продукты
  /products/{id}:
    delete:
      description: Удалить продукт по ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Удаляет продукты по ID
      tags:
      - Продукты
    get:
      description: Получить продукт по ID
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Получение списка продуктов по id
      tags:
      - Продукты
    put:
      consumes:
      - application/json
      description: Обновить данные продукта
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: integer
      - description: Product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Обновление продукта
      tags:
      - Продукты
  /products/add:
    post:
      consumes:
      - application/json
      description: Создает новый продукт
      parameters:
      - description: Product data
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Добавление нового продукта
      tags:
      - Продукты
  /purchases/add:
    post:
      consumes:
      - application/json
      description: Создает новую покупку для указанного продукта
      parameters:
      - description: Данные о покупке
        in: body
        name: purchase
        required: true
        schema:
          $ref: '#/definitions/models.Purchase'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Создание покупки
      tags:
      - Покупки
  /purchases/product/{id}:
    get:
      description: Возвращает список покупок для указанного продукта
      parameters:
      - description: ID продукта
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Получение списка покупок по продукту
      tags:
      - Покупки
  /purchases/user/{id}:
    get:
      description: Возвращает список покупок для указанного пользователя
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Получение списка покупок пользователя
      tags:
      - Покупки
  /users/{id}:
    get:
      description: Возвращает профиль пользователя по указанному ID
      parameters:
      - description: ID пользователя
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Получение профиля пользователя
      tags:
      - Пользователи
  /users/login:
    post:
      consumes:
      - application/json
      description: Выполняет вход пользователя с указанными учетными данными
      parameters:
      - description: Учетные данные пользователя
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/models.Credentials'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Вход пользователя
      tags:
      - Пользователи
  /users/register:
    post:
      consumes:
      - application/json
      description: Регистрирует нового пользователя с предоставленными данными
      parameters:
      - description: User information
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/responses.Success'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Регистрация нового пользователя
      tags:
      - Пользователи
swagger: "2.0"
